module.exports = function(grunt) {
  
  var modRewrite, mountFolder, rewriteRule;
    modRewrite = require('connect-modrewrite');
    mountFolder = function(connect, dir) {
      return connect["static"](require('path').resolve(dir));
    };
    rewriteRule = '!\\.html|\\.js|\\.svg|\\.css|\\.png|\\.jpg|\\.woff|\\.ttf$ /index.html [L]';
  
  grunt.initConfig({
      pkg: grunt.file.readJSON('package.json'),

    watch: {
      modulesViews: {
        files: ['*.js', '*.html'],
        options: {
          livereload: true
        }
      }
    },
    
    connect: {
      serve: {
        options: {
          port: grunt.option('port') || '8000',
          hostname: grunt.option('host') || 'localhost',
          middleware: function(connect, middlewares) {
            return [modRewrite([rewriteRule]), mountFolder(connect, '')];
          }
        }
      }
    },

    concat: {
        myApp: {
            option: {
                separator: '\n\n'
            },
            src: [
                'App/scripts/src/*/*.js'
            ],
            dest: 'App/scripts/src/allApp.js'
        }
    },

    uglify: {
        myJS: {
            src:[
                'App/dist/annotate.js'
            ],
            dest: 'App/dist/min.annotate.js'
        }
    },

    ngAnnotate: {
        options: {
            singleQuotes: true
        },
        dest: {
           files: [
               {
                   src: ['App/scripts/src/app.js', 'App/scripts/src/*/*.js'],
                   ext: '.annotated.js',
                   extDot: 'last',
                   dest: 'App/dist/annotate.js'
               }
           ]
        }
    }
  });
  
  grunt.loadNpmTasks('grunt-contrib-connect');
  grunt.loadNpmTasks('grunt-contrib-watch');
  grunt.loadNpmTasks('grunt-contrib-concat');
  grunt.loadNpmTasks('grunt-contrib-uglify');
  grunt.loadNpmTasks('grunt-ng-annotate');

  grunt.registerTask('serve', ['ngAnnotate', 'uglify', 'connect', 'watch']);
};
 
// ---
// generated by coffee-script 1.9.0